# 运行模式
spring.shardingsphere.mode.type=Memory

# 配置真实数据源
spring.shardingsphere.datasource.names=mdm_data

# 配置第 1 个数据源 -default
#spring.shardingsphere.datasource.order_ds.type=com.zaxxer.hikari.HikariDataSource
#spring.shardingsphere.datasource.order_ds.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.order_ds.jdbc-url=jdbc:mysql://mysql3:3306/mytest
#spring.shardingsphere.datasource.order_ds.username=root
#spring.shardingsphere.datasource.order_ds.password=密码

spring.shardingsphere.datasource.mdm_data.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.mdm_data.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.mdm_data.jdbc-url=jdbc:mysql://localhost:3306/mdm_data?useSSL=false&useUnicode=true\
  &characterEncoding=utf-8&serverTimezone=GMT%2B8
spring.shardingsphere.datasource.mdm_data.username=root
spring.shardingsphere.datasource.mdm_data.password=root




# 标准分片表配置
# 由数据源名 + 表名组成，以小数点分隔。多个表以逗号分隔，支持 inline 表达式。
# 缺省表示使用已知数据源与逻辑表名称生成数据节点，用于广播表（即每个库中都需要一个同样的表用于关联查询，多为字典表）或只分库不分表且所有库的表结构完全一致的情况
spring.shardingsphere.rules.sharding.tables.mdm_trace_log.actual-data-nodes=mdm_data.mdm_trace_log_202301,mdm_data.mdm_trace_log_202302

# 用于单分片键的标准分片场景
# 分表策略
# 分片列名称
spring.shardingsphere.rules.sharding.tables.mdm_trace_log.table-strategy.standard.sharding-column=trace_batch
# 分片算法名称
spring.shardingsphere.rules.sharding.tables.mdm_trace_log.table-strategy.standard.sharding-algorithm-name=alg_mod
# 分片算法配置
# 分片算法类型
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.type=MOD
# 分片算法属性配置
spring.shardingsphere.rules.sharding.sharding-algorithms.alg_mod.props.sharding-count=2

# 打印SQl
spring.shardingsphere.props.sql-show=true

mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl